.data
BingoArray:    .word   -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
BingoArraySize: .word   64
newline:    .asciiz "\n"
.eqv    SysRandIntRange 42
.eqv    SysReadChar 12

.text

main:
    # Algorithm to shuffle
    lw  $s0, BingoArraySize  # Setting $s0 as loop counter
    add $s0, $s0, -1     #adding until length-1
    li  $a0, 0            # setting $a0=0
   
shuffle_loop:
    # Getting a random number from -31 to 32
    addi    $a1, $s0, 1      # $a1 = i+1 (bc random number syscall is exclusive)
    li  $v0, SysRandIntRange  # "random int range" syscall (result stored in $a0)
    syscall
   
    # Swap values at index $a0 (rand # = j) and $s0 (i) (value at $a0 = $t0, value at $s0 = $t1)
    sll $t2, $a0, 2        # $t2 = $a0 * 4 (offset for loading words)
    sll $t3, $s0, 2        # $t3 = $s0 * 4
   
    lw  $t0, BingoArray($t2)  # $t0 = arr[i]
    lw  $t1, BingoArray($t3)  # $t1 = arr[j]
    sw  $t0, BingoArray($t3)  # arr[i] = $t1
    sw  $t1, BingoArray($t2)  # arr[j] = $t0
   
    # Decrement i and check loop condition
    add $s0, $s0, -1      # i--
    bgtz    $s0, shuffle_loop  # If i > 0, loop
   
    # END SHUFFLE ALGORITHM

    # PRINT ALGORITHM:
    # print 10 random numbers
    li  $s1, 10           # Set $s1 to number of random numbers to print
    li  $s0, 0            # $s0 = i (counter)
   
print_loop:
    # Print arr[i]
    sll $t0, $s0, 2       # $t0 = $s0 * 4 = i * 4
    lw  $a0, BingoArray($t0)  # $a0 = arr[i] - $a0 is the param for print int syscall
    li  $v0, 1            # "print int" syscall
    syscall
   
    # Print newline
    la  $a0, newline      # Load addr of newline string to $a0
    li  $v0, 4            # "print string" syscall
    syscall
   
    # Read a character (ENTER)
    li  $v0, SysReadChar  # "read char" syscall
    syscall
   
    # Loop condition
    add $s0, $s0, 1       # i++
    blt $s0, $s1, print_loop  # If i < array length, loop
   
    # END PRINT ALGORITHM
   
    # Exit
    li  $v0, 10
    syscall
